Notes 10 27 2014

Passing Arrays to Functions
1: When I want to pass an array to a function. I juse use the name of the array. And it passes in the entire array
2: The function declaration indicates that a parameter is an array by including [] in the name of the array. 

For Example:
printArray(myOutputFile, myArray, size);

Passing an Array Element to Functions. 

1: Use the [] and an index value in the function call/

For Example
double angles[10];
for (int i=0;i<10; i++)
cout<< sin (angles[i]);


-------

Structures or Sturcutre Data

A struct is a way to bundle data together

Example:

struct Data
{
	int x;
	double y;
	void setX( int newx);
	
}; // <--- notice they end with a ; here 


Data myData; // this makes a variable of type Data

myData.x = 10;// dot notation
myData.y = 12.4;

// this is a member function to setx. 
void Data::setX(int newx)
{
	x= newx;

}

Array of Structs

Data myArrayofData[10];

for (int i=0; i<10;i++)
{
	myArrayofData[i].x=i //goes to egg carton, and takes out one of the eggs. 
	myArrayofData[i].y=i*1.0; // goes to array at i, and goes into the structure, and assigning a value. 

	//--or you can do. These lines do the exact same thing as the top

	Data myData = myArrayofData[i]; // get myData out of the array
	myData.x =i;
	myData.y = i*1.0;
	myArrayofData[i]=myData; stuff myData back in the array
}
Means that myData has a field called x and y and that you will assign the value 10 to x and 12.4 to y. 